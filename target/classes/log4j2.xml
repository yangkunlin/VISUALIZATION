<?xml version="1.0" encoding="UTF-8"?>
<configuration name="XIYUAN" status="WARN" monitorInterval="300">

    <properties>
        <!-- 生产环境 -->
        <property name="LOG_HOME">/xvdb/ESEARCH/logs/final/</property>

        <!--&lt;!&ndash; 开发环境 &ndash;&gt;-->
        <!--<property name="LOG_HOME">/xvdb/ESEARCH/logs/test/</property>-->

    </properties>


    <appenders>

        <!--这个输出控制台的配置-->

        <console name="Console" target="SYSTEM_OUT">
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>

            <!--输出日志的格式-->

            <PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n"/>

        </console>

        <!--文件会打印出所有信息，这个log每次运行程序会自动清空，由append属性决定，这个也挺有用的，适合临时测试用-->

        <!--<File name="log" fileName="log/test.log" append="false">-->

            <!--<PatternLayout pattern="%d{HH:mm:ss.SSS} %-5level %class{36} %L %M - %msg%xEx%n"/>-->

        <!--</File>-->

        <!-- 这个会打印出所有的info及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->

        <RollingFile name="RollingFileInfo" fileName="${LOG_HOME}/info.log"

                     filePattern="${LOG_HOME}/info-%d{yyyy-MM-dd}.log">

                     <!--filePattern="${LOG_HOME}/$${date:yyyy-MM}/info-%d{yyyy-MM-dd}-%i.log">-->

            <!--控制台只输出level及以上级别的信息（onMatch）， （onMismatch）-->

            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>

            <PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n"/>

            <Policies>

                <TimeBasedTriggeringPolicy modulate="true"/>

                <!--<SizeBasedTriggeringPolicy size="100 MB"/>-->

            </Policies>

        </RollingFile>

        <RollingFile name="RollingFileWarn" fileName="${LOG_HOME}/warn.log"

                     filePattern="${LOG_HOME}/warn-%d{yyyy-MM-dd}.log">

            <!--filePattern="${LOG_HOME}/$${date:yyyy-MM}/warn-%d{yyyy-MM-dd}-%i.log">-->


            <ThresholdFilter level="warn" onMatch="ACCEPT" onMismatch="DENY"/>

            <PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n"/>

            <Policies>

                <!--<TimeBasedTriggeringPolicy modulate="true"/>-->

                <SizeBasedTriggeringPolicy size="100 MB"/>

            </Policies>

            <!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，这里设置了20 -->

            <!--<DefaultRolloverStrategy max="20"/>-->

        </RollingFile>

        <RollingFile name="RollingFileError" fileName="${LOG_HOME}/error.log"

                     filePattern="${LOG_HOME}/error-%d{yyyy-MM-dd}.log">

            <!--filePattern="${LOG_HOME}/$${date:yyyy-MM}/error-%d{yyyy-MM-dd}-%i.log">-->


            <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>

            <PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n"/>

            <Policies>

                <!--<TimeBasedTriggeringPolicy modulate="true"/>-->

                <SizeBasedTriggeringPolicy size="100 MB"/>

            </Policies>

        </RollingFile>

    </appenders>

    <!--然后定义logger，只有定义了logger并引入的appender，appender才会生效-->

    <loggers>

        <!--过滤掉spring和mybatis的一些无用的DEBUG信息-->

        <logger name="org.springframework" level="WARN"></logger>
        <logger name="org.elasticsearch" level="WARN"></logger>

        <root level="info">

            <appender-ref ref="Console"/>

            <!--<appender-ref ref="RollingFileInfo"/>-->

            <!--<appender-ref ref="RollingFileWarn"/>-->

            <!--<appender-ref ref="RollingFileError"/>-->

        </root>

    </loggers>

</configuration>